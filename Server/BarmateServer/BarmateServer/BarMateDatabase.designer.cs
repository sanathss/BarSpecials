#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BarmateServer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Bar_Mate")]
	public partial class BarMateDatabaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertuo_store(uo_store instance);
    partial void Updateuo_store(uo_store instance);
    partial void Deleteuo_store(uo_store instance);
    partial void Insertuo_special(uo_special instance);
    partial void Updateuo_special(uo_special instance);
    partial void Deleteuo_special(uo_special instance);
    partial void Insertuo_suburb(uo_suburb instance);
    partial void Updateuo_suburb(uo_suburb instance);
    partial void Deleteuo_suburb(uo_suburb instance);
    partial void Insertso_system_parameter(so_system_parameter instance);
    partial void Updateso_system_parameter(so_system_parameter instance);
    partial void Deleteso_system_parameter(so_system_parameter instance);
    #endregion
		
		public BarMateDatabaseDataContext() : 
				base(global::BarmateServer.Properties.Settings.Default.Bar_MateConnectionString3, mappingSource)
		{
			OnCreated();
		}
		
		public BarMateDatabaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BarMateDatabaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BarMateDatabaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BarMateDatabaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<uo_store> uo_stores
		{
			get
			{
				return this.GetTable<uo_store>();
			}
		}
		
		public System.Data.Linq.Table<uo_special> uo_specials
		{
			get
			{
				return this.GetTable<uo_special>();
			}
		}
		
		public System.Data.Linq.Table<uo_suburb> uo_suburbs
		{
			get
			{
				return this.GetTable<uo_suburb>();
			}
		}
		
		public System.Data.Linq.Table<so_system_parameter> so_system_parameters
		{
			get
			{
				return this.GetTable<so_system_parameter>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.uo_store")]
	public partial class uo_store : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _store_id;
		
		private string _store_identifier;
		
		private string _store_name;
		
		private decimal _store_lat;
		
		private decimal _store_long;
		
		private decimal _suburb_id;
		
		private string _username;
		
		private string _user_password;
		
		private string _insert_user;
		
		private string _insert_process;
		
		private System.DateTime _insert_datetime;
		
		private string _update_user;
		
		private string _update_process;
		
		private System.Nullable<System.DateTime> _update_datetime;
		
		private EntitySet<uo_special> _uo_specials;
		
		private EntityRef<uo_suburb> _uo_suburb;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onstore_idChanging(decimal value);
    partial void Onstore_idChanged();
    partial void Onstore_identifierChanging(string value);
    partial void Onstore_identifierChanged();
    partial void Onstore_nameChanging(string value);
    partial void Onstore_nameChanged();
    partial void Onstore_latChanging(decimal value);
    partial void Onstore_latChanged();
    partial void Onstore_longChanging(decimal value);
    partial void Onstore_longChanged();
    partial void Onsuburb_idChanging(decimal value);
    partial void Onsuburb_idChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void Onuser_passwordChanging(string value);
    partial void Onuser_passwordChanged();
    partial void Oninsert_userChanging(string value);
    partial void Oninsert_userChanged();
    partial void Oninsert_processChanging(string value);
    partial void Oninsert_processChanged();
    partial void Oninsert_datetimeChanging(System.DateTime value);
    partial void Oninsert_datetimeChanged();
    partial void Onupdate_userChanging(string value);
    partial void Onupdate_userChanged();
    partial void Onupdate_processChanging(string value);
    partial void Onupdate_processChanged();
    partial void Onupdate_datetimeChanging(System.Nullable<System.DateTime> value);
    partial void Onupdate_datetimeChanged();
    #endregion
		
		public uo_store()
		{
			this._uo_specials = new EntitySet<uo_special>(new Action<uo_special>(this.attach_uo_specials), new Action<uo_special>(this.detach_uo_specials));
			this._uo_suburb = default(EntityRef<uo_suburb>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_store_id", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal store_id
		{
			get
			{
				return this._store_id;
			}
			set
			{
				if ((this._store_id != value))
				{
					this.Onstore_idChanging(value);
					this.SendPropertyChanging();
					this._store_id = value;
					this.SendPropertyChanged("store_id");
					this.Onstore_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_store_identifier", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string store_identifier
		{
			get
			{
				return this._store_identifier;
			}
			set
			{
				if ((this._store_identifier != value))
				{
					this.Onstore_identifierChanging(value);
					this.SendPropertyChanging();
					this._store_identifier = value;
					this.SendPropertyChanged("store_identifier");
					this.Onstore_identifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_store_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string store_name
		{
			get
			{
				return this._store_name;
			}
			set
			{
				if ((this._store_name != value))
				{
					this.Onstore_nameChanging(value);
					this.SendPropertyChanging();
					this._store_name = value;
					this.SendPropertyChanged("store_name");
					this.Onstore_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_store_lat", DbType="Decimal(18,6) NOT NULL")]
		public decimal store_lat
		{
			get
			{
				return this._store_lat;
			}
			set
			{
				if ((this._store_lat != value))
				{
					this.Onstore_latChanging(value);
					this.SendPropertyChanging();
					this._store_lat = value;
					this.SendPropertyChanged("store_lat");
					this.Onstore_latChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_store_long", DbType="Decimal(18,6) NOT NULL")]
		public decimal store_long
		{
			get
			{
				return this._store_long;
			}
			set
			{
				if ((this._store_long != value))
				{
					this.Onstore_longChanging(value);
					this.SendPropertyChanging();
					this._store_long = value;
					this.SendPropertyChanged("store_long");
					this.Onstore_longChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_suburb_id", DbType="Decimal(18,0) NOT NULL")]
		public decimal suburb_id
		{
			get
			{
				return this._suburb_id;
			}
			set
			{
				if ((this._suburb_id != value))
				{
					if (this._uo_suburb.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsuburb_idChanging(value);
					this.SendPropertyChanging();
					this._suburb_id = value;
					this.SendPropertyChanged("suburb_id");
					this.Onsuburb_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_password", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string user_password
		{
			get
			{
				return this._user_password;
			}
			set
			{
				if ((this._user_password != value))
				{
					this.Onuser_passwordChanging(value);
					this.SendPropertyChanging();
					this._user_password = value;
					this.SendPropertyChanged("user_password");
					this.Onuser_passwordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_insert_user", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string insert_user
		{
			get
			{
				return this._insert_user;
			}
			set
			{
				if ((this._insert_user != value))
				{
					this.Oninsert_userChanging(value);
					this.SendPropertyChanging();
					this._insert_user = value;
					this.SendPropertyChanged("insert_user");
					this.Oninsert_userChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_insert_process", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string insert_process
		{
			get
			{
				return this._insert_process;
			}
			set
			{
				if ((this._insert_process != value))
				{
					this.Oninsert_processChanging(value);
					this.SendPropertyChanging();
					this._insert_process = value;
					this.SendPropertyChanged("insert_process");
					this.Oninsert_processChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_insert_datetime", DbType="DateTime NOT NULL")]
		public System.DateTime insert_datetime
		{
			get
			{
				return this._insert_datetime;
			}
			set
			{
				if ((this._insert_datetime != value))
				{
					this.Oninsert_datetimeChanging(value);
					this.SendPropertyChanging();
					this._insert_datetime = value;
					this.SendPropertyChanged("insert_datetime");
					this.Oninsert_datetimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_update_user", DbType="VarChar(20)")]
		public string update_user
		{
			get
			{
				return this._update_user;
			}
			set
			{
				if ((this._update_user != value))
				{
					this.Onupdate_userChanging(value);
					this.SendPropertyChanging();
					this._update_user = value;
					this.SendPropertyChanged("update_user");
					this.Onupdate_userChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_update_process", DbType="VarChar(20)")]
		public string update_process
		{
			get
			{
				return this._update_process;
			}
			set
			{
				if ((this._update_process != value))
				{
					this.Onupdate_processChanging(value);
					this.SendPropertyChanging();
					this._update_process = value;
					this.SendPropertyChanged("update_process");
					this.Onupdate_processChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_update_datetime", DbType="DateTime")]
		public System.Nullable<System.DateTime> update_datetime
		{
			get
			{
				return this._update_datetime;
			}
			set
			{
				if ((this._update_datetime != value))
				{
					this.Onupdate_datetimeChanging(value);
					this.SendPropertyChanging();
					this._update_datetime = value;
					this.SendPropertyChanged("update_datetime");
					this.Onupdate_datetimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="uo_store_uo_special", Storage="_uo_specials", ThisKey="store_id", OtherKey="store_id")]
		public EntitySet<uo_special> uo_specials
		{
			get
			{
				return this._uo_specials;
			}
			set
			{
				this._uo_specials.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="uo_suburb_uo_store", Storage="_uo_suburb", ThisKey="suburb_id", OtherKey="suburb_id", IsForeignKey=true)]
		public uo_suburb uo_suburb
		{
			get
			{
				return this._uo_suburb.Entity;
			}
			set
			{
				uo_suburb previousValue = this._uo_suburb.Entity;
				if (((previousValue != value) 
							|| (this._uo_suburb.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._uo_suburb.Entity = null;
						previousValue.uo_stores.Remove(this);
					}
					this._uo_suburb.Entity = value;
					if ((value != null))
					{
						value.uo_stores.Add(this);
						this._suburb_id = value.suburb_id;
					}
					else
					{
						this._suburb_id = default(decimal);
					}
					this.SendPropertyChanged("uo_suburb");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_uo_specials(uo_special entity)
		{
			this.SendPropertyChanging();
			entity.uo_store = this;
		}
		
		private void detach_uo_specials(uo_special entity)
		{
			this.SendPropertyChanging();
			entity.uo_store = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.uo_special")]
	public partial class uo_special : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _special_id;
		
		private decimal _store_id;
		
		private string _special_name;
		
		private string _special_description;
		
		private decimal _price;
		
		private string _duration;
		
		private System.Nullable<decimal> _receipt_counter;
		
		private string _active;
		
		private string _insert_user;
		
		private string _insert_process;
		
		private System.DateTime _insert_datetime;
		
		private string _update_user;
		
		private string _update_process;
		
		private System.Nullable<System.DateTime> _update_datetime;
		
		private EntityRef<uo_store> _uo_store;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onspecial_idChanging(decimal value);
    partial void Onspecial_idChanged();
    partial void Onstore_idChanging(decimal value);
    partial void Onstore_idChanged();
    partial void Onspecial_nameChanging(string value);
    partial void Onspecial_nameChanged();
    partial void Onspecial_descriptionChanging(string value);
    partial void Onspecial_descriptionChanged();
    partial void OnpriceChanging(decimal value);
    partial void OnpriceChanged();
    partial void OndurationChanging(string value);
    partial void OndurationChanged();
    partial void Onreceipt_counterChanging(System.Nullable<decimal> value);
    partial void Onreceipt_counterChanged();
    partial void OnactiveChanging(string value);
    partial void OnactiveChanged();
    partial void Oninsert_userChanging(string value);
    partial void Oninsert_userChanged();
    partial void Oninsert_processChanging(string value);
    partial void Oninsert_processChanged();
    partial void Oninsert_datetimeChanging(System.DateTime value);
    partial void Oninsert_datetimeChanged();
    partial void Onupdate_userChanging(string value);
    partial void Onupdate_userChanged();
    partial void Onupdate_processChanging(string value);
    partial void Onupdate_processChanged();
    partial void Onupdate_datetimeChanging(System.Nullable<System.DateTime> value);
    partial void Onupdate_datetimeChanged();
    #endregion
		
		public uo_special()
		{
			this._uo_store = default(EntityRef<uo_store>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_special_id", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal special_id
		{
			get
			{
				return this._special_id;
			}
			set
			{
				if ((this._special_id != value))
				{
					this.Onspecial_idChanging(value);
					this.SendPropertyChanging();
					this._special_id = value;
					this.SendPropertyChanged("special_id");
					this.Onspecial_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_store_id", DbType="Decimal(18,0) NOT NULL")]
		public decimal store_id
		{
			get
			{
				return this._store_id;
			}
			set
			{
				if ((this._store_id != value))
				{
					if (this._uo_store.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstore_idChanging(value);
					this.SendPropertyChanging();
					this._store_id = value;
					this.SendPropertyChanged("store_id");
					this.Onstore_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_special_name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string special_name
		{
			get
			{
				return this._special_name;
			}
			set
			{
				if ((this._special_name != value))
				{
					this.Onspecial_nameChanging(value);
					this.SendPropertyChanging();
					this._special_name = value;
					this.SendPropertyChanged("special_name");
					this.Onspecial_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_special_description", DbType="VarChar(100)")]
		public string special_description
		{
			get
			{
				return this._special_description;
			}
			set
			{
				if ((this._special_description != value))
				{
					this.Onspecial_descriptionChanging(value);
					this.SendPropertyChanging();
					this._special_description = value;
					this.SendPropertyChanged("special_description");
					this.Onspecial_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Money NOT NULL")]
		public decimal price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_duration", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		public string duration
		{
			get
			{
				return this._duration;
			}
			set
			{
				if ((this._duration != value))
				{
					this.OndurationChanging(value);
					this.SendPropertyChanging();
					this._duration = value;
					this.SendPropertyChanged("duration");
					this.OndurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_receipt_counter", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> receipt_counter
		{
			get
			{
				return this._receipt_counter;
			}
			set
			{
				if ((this._receipt_counter != value))
				{
					this.Onreceipt_counterChanging(value);
					this.SendPropertyChanging();
					this._receipt_counter = value;
					this.SendPropertyChanged("receipt_counter");
					this.Onreceipt_counterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_insert_user", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string insert_user
		{
			get
			{
				return this._insert_user;
			}
			set
			{
				if ((this._insert_user != value))
				{
					this.Oninsert_userChanging(value);
					this.SendPropertyChanging();
					this._insert_user = value;
					this.SendPropertyChanged("insert_user");
					this.Oninsert_userChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_insert_process", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string insert_process
		{
			get
			{
				return this._insert_process;
			}
			set
			{
				if ((this._insert_process != value))
				{
					this.Oninsert_processChanging(value);
					this.SendPropertyChanging();
					this._insert_process = value;
					this.SendPropertyChanged("insert_process");
					this.Oninsert_processChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_insert_datetime", DbType="DateTime NOT NULL")]
		public System.DateTime insert_datetime
		{
			get
			{
				return this._insert_datetime;
			}
			set
			{
				if ((this._insert_datetime != value))
				{
					this.Oninsert_datetimeChanging(value);
					this.SendPropertyChanging();
					this._insert_datetime = value;
					this.SendPropertyChanged("insert_datetime");
					this.Oninsert_datetimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_update_user", DbType="VarChar(20)")]
		public string update_user
		{
			get
			{
				return this._update_user;
			}
			set
			{
				if ((this._update_user != value))
				{
					this.Onupdate_userChanging(value);
					this.SendPropertyChanging();
					this._update_user = value;
					this.SendPropertyChanged("update_user");
					this.Onupdate_userChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_update_process", DbType="VarChar(20)")]
		public string update_process
		{
			get
			{
				return this._update_process;
			}
			set
			{
				if ((this._update_process != value))
				{
					this.Onupdate_processChanging(value);
					this.SendPropertyChanging();
					this._update_process = value;
					this.SendPropertyChanged("update_process");
					this.Onupdate_processChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_update_datetime", DbType="DateTime")]
		public System.Nullable<System.DateTime> update_datetime
		{
			get
			{
				return this._update_datetime;
			}
			set
			{
				if ((this._update_datetime != value))
				{
					this.Onupdate_datetimeChanging(value);
					this.SendPropertyChanging();
					this._update_datetime = value;
					this.SendPropertyChanged("update_datetime");
					this.Onupdate_datetimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="uo_store_uo_special", Storage="_uo_store", ThisKey="store_id", OtherKey="store_id", IsForeignKey=true)]
		public uo_store uo_store
		{
			get
			{
				return this._uo_store.Entity;
			}
			set
			{
				uo_store previousValue = this._uo_store.Entity;
				if (((previousValue != value) 
							|| (this._uo_store.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._uo_store.Entity = null;
						previousValue.uo_specials.Remove(this);
					}
					this._uo_store.Entity = value;
					if ((value != null))
					{
						value.uo_specials.Add(this);
						this._store_id = value.store_id;
					}
					else
					{
						this._store_id = default(decimal);
					}
					this.SendPropertyChanged("uo_store");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.uo_suburb")]
	public partial class uo_suburb : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _suburb_id;
		
		private string _suburb_name;
		
		private string _city_name;
		
		private string _active;
		
		private System.DateTime _insert_datetime;
		
		private string _insert_user;
		
		private string _insert_process;
		
		private System.Nullable<System.DateTime> _update_datetime;
		
		private string _update_user;
		
		private string _update_process;
		
		private EntitySet<uo_store> _uo_stores;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onsuburb_idChanging(decimal value);
    partial void Onsuburb_idChanged();
    partial void Onsuburb_nameChanging(string value);
    partial void Onsuburb_nameChanged();
    partial void Oncity_nameChanging(string value);
    partial void Oncity_nameChanged();
    partial void OnactiveChanging(string value);
    partial void OnactiveChanged();
    partial void Oninsert_datetimeChanging(System.DateTime value);
    partial void Oninsert_datetimeChanged();
    partial void Oninsert_userChanging(string value);
    partial void Oninsert_userChanged();
    partial void Oninsert_processChanging(string value);
    partial void Oninsert_processChanged();
    partial void Onupdate_datetimeChanging(System.Nullable<System.DateTime> value);
    partial void Onupdate_datetimeChanged();
    partial void Onupdate_userChanging(string value);
    partial void Onupdate_userChanged();
    partial void Onupdate_processChanging(string value);
    partial void Onupdate_processChanged();
    #endregion
		
		public uo_suburb()
		{
			this._uo_stores = new EntitySet<uo_store>(new Action<uo_store>(this.attach_uo_stores), new Action<uo_store>(this.detach_uo_stores));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_suburb_id", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal suburb_id
		{
			get
			{
				return this._suburb_id;
			}
			set
			{
				if ((this._suburb_id != value))
				{
					this.Onsuburb_idChanging(value);
					this.SendPropertyChanging();
					this._suburb_id = value;
					this.SendPropertyChanged("suburb_id");
					this.Onsuburb_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_suburb_name", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string suburb_name
		{
			get
			{
				return this._suburb_name;
			}
			set
			{
				if ((this._suburb_name != value))
				{
					this.Onsuburb_nameChanging(value);
					this.SendPropertyChanging();
					this._suburb_name = value;
					this.SendPropertyChanged("suburb_name");
					this.Onsuburb_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city_name", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string city_name
		{
			get
			{
				return this._city_name;
			}
			set
			{
				if ((this._city_name != value))
				{
					this.Oncity_nameChanging(value);
					this.SendPropertyChanging();
					this._city_name = value;
					this.SendPropertyChanged("city_name");
					this.Oncity_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_insert_datetime", DbType="DateTime NOT NULL")]
		public System.DateTime insert_datetime
		{
			get
			{
				return this._insert_datetime;
			}
			set
			{
				if ((this._insert_datetime != value))
				{
					this.Oninsert_datetimeChanging(value);
					this.SendPropertyChanging();
					this._insert_datetime = value;
					this.SendPropertyChanged("insert_datetime");
					this.Oninsert_datetimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_insert_user", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string insert_user
		{
			get
			{
				return this._insert_user;
			}
			set
			{
				if ((this._insert_user != value))
				{
					this.Oninsert_userChanging(value);
					this.SendPropertyChanging();
					this._insert_user = value;
					this.SendPropertyChanged("insert_user");
					this.Oninsert_userChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_insert_process", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string insert_process
		{
			get
			{
				return this._insert_process;
			}
			set
			{
				if ((this._insert_process != value))
				{
					this.Oninsert_processChanging(value);
					this.SendPropertyChanging();
					this._insert_process = value;
					this.SendPropertyChanged("insert_process");
					this.Oninsert_processChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_update_datetime", DbType="DateTime")]
		public System.Nullable<System.DateTime> update_datetime
		{
			get
			{
				return this._update_datetime;
			}
			set
			{
				if ((this._update_datetime != value))
				{
					this.Onupdate_datetimeChanging(value);
					this.SendPropertyChanging();
					this._update_datetime = value;
					this.SendPropertyChanged("update_datetime");
					this.Onupdate_datetimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_update_user", DbType="VarChar(20)")]
		public string update_user
		{
			get
			{
				return this._update_user;
			}
			set
			{
				if ((this._update_user != value))
				{
					this.Onupdate_userChanging(value);
					this.SendPropertyChanging();
					this._update_user = value;
					this.SendPropertyChanged("update_user");
					this.Onupdate_userChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_update_process", DbType="VarChar(20)")]
		public string update_process
		{
			get
			{
				return this._update_process;
			}
			set
			{
				if ((this._update_process != value))
				{
					this.Onupdate_processChanging(value);
					this.SendPropertyChanging();
					this._update_process = value;
					this.SendPropertyChanged("update_process");
					this.Onupdate_processChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="uo_suburb_uo_store", Storage="_uo_stores", ThisKey="suburb_id", OtherKey="suburb_id")]
		public EntitySet<uo_store> uo_stores
		{
			get
			{
				return this._uo_stores;
			}
			set
			{
				this._uo_stores.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_uo_stores(uo_store entity)
		{
			this.SendPropertyChanging();
			entity.uo_suburb = this;
		}
		
		private void detach_uo_stores(uo_store entity)
		{
			this.SendPropertyChanging();
			entity.uo_suburb = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.so_system_parameters")]
	public partial class so_system_parameter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _parameter_id;
		
		private string _param_code;
		
		private string _param_name;
		
		private string _parameter;
		
		private string _insert_user;
		
		private string _insert_process;
		
		private System.DateTime _insert_datetime;
		
		private string _update_user;
		
		private string _update_process;
		
		private System.Nullable<System.DateTime> _update_datetime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onparameter_idChanging(decimal value);
    partial void Onparameter_idChanged();
    partial void Onparam_codeChanging(string value);
    partial void Onparam_codeChanged();
    partial void Onparam_nameChanging(string value);
    partial void Onparam_nameChanged();
    partial void OnparameterChanging(string value);
    partial void OnparameterChanged();
    partial void Oninsert_userChanging(string value);
    partial void Oninsert_userChanged();
    partial void Oninsert_processChanging(string value);
    partial void Oninsert_processChanged();
    partial void Oninsert_datetimeChanging(System.DateTime value);
    partial void Oninsert_datetimeChanged();
    partial void Onupdate_userChanging(string value);
    partial void Onupdate_userChanged();
    partial void Onupdate_processChanging(string value);
    partial void Onupdate_processChanged();
    partial void Onupdate_datetimeChanging(System.Nullable<System.DateTime> value);
    partial void Onupdate_datetimeChanged();
    #endregion
		
		public so_system_parameter()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parameter_id", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal parameter_id
		{
			get
			{
				return this._parameter_id;
			}
			set
			{
				if ((this._parameter_id != value))
				{
					this.Onparameter_idChanging(value);
					this.SendPropertyChanging();
					this._parameter_id = value;
					this.SendPropertyChanged("parameter_id");
					this.Onparameter_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_param_code", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string param_code
		{
			get
			{
				return this._param_code;
			}
			set
			{
				if ((this._param_code != value))
				{
					this.Onparam_codeChanging(value);
					this.SendPropertyChanging();
					this._param_code = value;
					this.SendPropertyChanged("param_code");
					this.Onparam_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_param_name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string param_name
		{
			get
			{
				return this._param_name;
			}
			set
			{
				if ((this._param_name != value))
				{
					this.Onparam_nameChanging(value);
					this.SendPropertyChanging();
					this._param_name = value;
					this.SendPropertyChanged("param_name");
					this.Onparam_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parameter", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string parameter
		{
			get
			{
				return this._parameter;
			}
			set
			{
				if ((this._parameter != value))
				{
					this.OnparameterChanging(value);
					this.SendPropertyChanging();
					this._parameter = value;
					this.SendPropertyChanged("parameter");
					this.OnparameterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_insert_user", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string insert_user
		{
			get
			{
				return this._insert_user;
			}
			set
			{
				if ((this._insert_user != value))
				{
					this.Oninsert_userChanging(value);
					this.SendPropertyChanging();
					this._insert_user = value;
					this.SendPropertyChanged("insert_user");
					this.Oninsert_userChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_insert_process", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string insert_process
		{
			get
			{
				return this._insert_process;
			}
			set
			{
				if ((this._insert_process != value))
				{
					this.Oninsert_processChanging(value);
					this.SendPropertyChanging();
					this._insert_process = value;
					this.SendPropertyChanged("insert_process");
					this.Oninsert_processChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_insert_datetime", DbType="DateTime NOT NULL")]
		public System.DateTime insert_datetime
		{
			get
			{
				return this._insert_datetime;
			}
			set
			{
				if ((this._insert_datetime != value))
				{
					this.Oninsert_datetimeChanging(value);
					this.SendPropertyChanging();
					this._insert_datetime = value;
					this.SendPropertyChanged("insert_datetime");
					this.Oninsert_datetimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_update_user", DbType="VarChar(10)")]
		public string update_user
		{
			get
			{
				return this._update_user;
			}
			set
			{
				if ((this._update_user != value))
				{
					this.Onupdate_userChanging(value);
					this.SendPropertyChanging();
					this._update_user = value;
					this.SendPropertyChanged("update_user");
					this.Onupdate_userChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_update_process", DbType="VarChar(10)")]
		public string update_process
		{
			get
			{
				return this._update_process;
			}
			set
			{
				if ((this._update_process != value))
				{
					this.Onupdate_processChanging(value);
					this.SendPropertyChanging();
					this._update_process = value;
					this.SendPropertyChanged("update_process");
					this.Onupdate_processChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_update_datetime", DbType="DateTime")]
		public System.Nullable<System.DateTime> update_datetime
		{
			get
			{
				return this._update_datetime;
			}
			set
			{
				if ((this._update_datetime != value))
				{
					this.Onupdate_datetimeChanging(value);
					this.SendPropertyChanging();
					this._update_datetime = value;
					this.SendPropertyChanged("update_datetime");
					this.Onupdate_datetimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
